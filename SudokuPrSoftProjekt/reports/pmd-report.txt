src/main/java/application/BasicGameBuilder.java:1:	ExcessiveImports:	ExcessiveImports: A high number of imports can indicate a high degree of coupling within an object.
src/main/java/application/BasicGameBuilder.java:1:	ExcessiveImports:	ExcessiveImports: A high number of imports can indicate a high degree of coupling within an object.
src/main/java/application/BasicGameBuilder.java:24:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCode'
src/main/java/application/BasicGameBuilder.java:24:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCode'
src/main/java/application/BasicGameBuilder.java:25:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCodeCombination'
src/main/java/application/BasicGameBuilder.java:25:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCodeCombination'
src/main/java/application/BasicGameBuilder.java:26:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCombination'
src/main/java/application/BasicGameBuilder.java:26:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCombination'
src/main/java/application/BasicGameBuilder.java:43:	AbstractNaming:	AbstractNaming: Abstract classes should be named AbstractXXX
src/main/java/application/BasicGameBuilder.java:43:	AbstractNaming:	AbstractNaming: Abstract classes should be named AbstractXXX
src/main/java/application/BasicGameBuilder.java:43:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/BasicGameBuilder.java:43:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/BasicGameBuilder.java:43:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/application/BasicGameBuilder.java:43:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/application/BasicGameBuilder.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:53:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:53:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:63:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:63:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:64:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:64:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:71:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:71:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:71:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:71:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:72:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:72:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:72:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:72:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:73:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:73:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:73:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:73:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:74:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:74:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:74:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:74:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:75:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:75:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:75:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:75:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:82:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:82:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:89:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:89:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:89:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:89:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:89:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:89:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:91:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:91:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:91:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:91:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:99:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:99:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:118:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:118:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:160:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:160:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:167:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:167:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:167:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/application/BasicGameBuilder.java:167:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/application/BasicGameBuilder.java:168:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/application/BasicGameBuilder.java:168:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/application/BasicGameBuilder.java:170:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/BasicGameBuilder.java:170:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/BasicGameBuilder.java:190:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:190:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:190:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/application/BasicGameBuilder.java:190:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/application/BasicGameBuilder.java:202:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:202:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:202:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:202:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:202:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:202:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:205:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:205:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:205:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:205:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:205:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:205:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:206:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:206:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:206:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:206:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:206:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:206:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:207:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:207:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:207:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:207:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:207:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:207:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:207:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:207:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:207:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:207:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:207:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:207:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:208:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:208:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:208:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:208:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:208:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:208:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:209:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:209:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:209:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:209:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:209:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:209:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:210:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:210:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:210:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:210:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:210:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:210:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:211:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:211:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:211:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:211:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:211:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:211:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:214:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:214:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:214:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:214:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:214:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:214:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:215:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:215:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:215:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:215:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:215:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:215:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:216:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:216:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:216:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:216:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:216:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:216:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:217:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:217:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:217:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:217:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:217:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:217:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:218:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:218:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:218:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:218:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:218:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:218:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:221:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:221:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:221:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:221:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:221:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:221:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:222:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:222:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:222:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:222:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:222:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:222:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:223:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:223:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:223:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:223:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:223:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:223:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:224:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:224:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:224:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:224:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:224:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:224:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:227:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:227:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:227:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:227:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:227:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:227:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:228:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:228:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:228:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:228:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:228:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:228:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:231:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:231:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:231:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:231:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:231:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:231:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:232:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:232:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/BasicGameBuilder.java:232:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:232:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/BasicGameBuilder.java:232:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:232:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/BasicGameBuilder.java:331:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/application/BasicGameBuilder.java:331:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/application/BasicGameBuilder.java:409:	MethodReturnsInternalArray:	MethodReturnsInternalArray: Returning 'textField' may expose an internal array.
src/main/java/application/BasicGameBuilder.java:409:	MethodReturnsInternalArray:	MethodReturnsInternalArray: Returning 'textField' may expose an internal array.
src/main/java/application/BasicGameBuilder.java:412:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:412:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:413:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:413:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:429:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/BasicGameBuilder.java:429:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/CloseWindowStage.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/CloseWindowStage.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/CloseWindowStage.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CloseWindowStage.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CloseWindowStage.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/CloseWindowStage.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/CloseWindowStage.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/CloseWindowStage.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/CloseWindowStage.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/CloseWindowStage.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/CustomColorPicker.java:14:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/CustomColorPicker.java:14:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/CustomColorPicker.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CustomColorPicker.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CustomColorPicker.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/CustomColorPicker.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/CustomColorPicker.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/CustomColorPicker.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/CustomColorPicker.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/CustomColorPicker.java:21:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/CustomColorPicker.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ColorRectTooltipCell nested class if you want a default access modifier
src/main/java/application/CustomColorPicker.java:52:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ColorRectTooltipCell nested class if you want a default access modifier
src/main/java/application/CustomColorPicker.java:52:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CustomColorPicker.java:52:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CustomColorPicker.java:63:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ColorRectCell nested class if you want a default access modifier
src/main/java/application/CustomColorPicker.java:63:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ColorRectCell nested class if you want a default access modifier
src/main/java/application/CustomColorPicker.java:63:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/CustomColorPicker.java:63:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/FreeFormGameBuilder.java:12:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.control.Label'
src/main/java/application/FreeFormGameBuilder.java:12:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.control.Label'
src/main/java/application/FreeFormGameBuilder.java:20:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/FreeFormGameBuilder.java:20:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/FreeFormGameBuilder.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/FreeFormGameBuilder.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/FreeFormGameBuilder.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/FreeFormGameBuilder.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/FreeFormGameBuilder.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the colorPicker field if you want a default access modifier
src/main/java/application/FreeFormGameBuilder.java:30:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the colorPicker field if you want a default access modifier
src/main/java/application/FreeFormGameBuilder.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/FreeFormGameBuilder.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/FreeFormGameBuilder.java:30:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/FreeFormGameBuilder.java:30:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/FreeFormGameBuilder.java:30:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/FreeFormGameBuilder.java:30:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/FreeFormGameBuilder.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/FreeFormGameBuilder.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/FreeFormGameBuilder.java:31:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the cell field if you want a default access modifier
src/main/java/application/FreeFormGameBuilder.java:31:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the cell field if you want a default access modifier
src/main/java/application/FreeFormGameBuilder.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/FreeFormGameBuilder.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/FreeFormGameBuilder.java:31:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/FreeFormGameBuilder.java:31:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/FreeFormGameBuilder.java:31:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/FreeFormGameBuilder.java:31:	FieldDeclarationsShouldBeAtStartOfClass:	FieldDeclarationsShouldBeAtStartOfClass: Fields should be declared at the top of the class, before any method declarations, constructors, initializers or inner classes.
src/main/java/application/FreeFormGameBuilder.java:32:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/FreeFormGameBuilder.java:32:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/FreeFormGameBuilder.java:38:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/FreeFormGameBuilder.java:38:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/FreeFormGameBuilder.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/FreeFormGameBuilder.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/GUI.java:9:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/GUI.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/GUI.java:9:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/GUI.java:9:	ShortClassName:	ShortClassName: Avoid short class names like GUI
src/main/java/application/GUI.java:9:	ShortClassName:	ShortClassName: Avoid short class names like GUI
src/main/java/application/GUI.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the window field if you want a default access modifier
src/main/java/application/GUI.java:12:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the window field if you want a default access modifier
src/main/java/application/GUI.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:12:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/GUI.java:14:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/GUI.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainScene field if you want a default access modifier
src/main/java/application/GUI.java:14:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainScene field if you want a default access modifier
src/main/java/application/GUI.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:14:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/GUI.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/GUI.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainmenu field if you want a default access modifier
src/main/java/application/GUI.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainmenu field if you want a default access modifier
src/main/java/application/GUI.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainPane field if you want a default access modifier
src/main/java/application/GUI.java:16:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the mainPane field if you want a default access modifier
src/main/java/application/GUI.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:16:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/GUI.java:16:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:16:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/GUI.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:20:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:53:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:54:	ShortVariable:	ShortVariable: Avoid variables with short names like c
src/main/java/application/GUI.java:54:	ShortVariable:	ShortVariable: Avoid variables with short names like c
src/main/java/application/GUI.java:57:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/application/GUI.java:57:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/application/GUI.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUI.java:66:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUIStarter.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/GUIStarter.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/GUIStarter.java:5:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/GUIStarter.java:5:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/MainMenu.java:25:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/MainMenu.java:25:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/MainMenu.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:40:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:43:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:43:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:47:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:47:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:47:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:49:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:49:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:51:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:51:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:51:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:52:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:52:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:52:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:59:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:59:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/MainMenu.java:59:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:59:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/MainMenu.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/MainMenu.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/NewGamePopUp.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/NewGamePopUp.java:12:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/NewGamePopUp.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/NewGamePopUp.java:12:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/NewGamePopUp.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/NewGamePopUp.java:23:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/RulesStage.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/RulesStage.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/RulesStage.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/RulesStage.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:22:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:27:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:27:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:28:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:28:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:30:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:30:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:34:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:34:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:35:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:35:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:38:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:38:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:39:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:39:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:40:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:42:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/RulesStage.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:42:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/RulesStage.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:67:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:67:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:85:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:85:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:121:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:121:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:172:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:172:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:208:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/RulesStage.java:208:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SamuraiGameBuilder.java:20:	GodClass:	GodClass: Possible God Class (WMC=51, ATFD=17, TCC=0.000%)
src/main/java/application/SamuraiGameBuilder.java:20:	GodClass:	GodClass: Possible God Class (WMC=51, ATFD=17, TCC=0.000%)
src/main/java/application/SamuraiGameBuilder.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SamuraiGameBuilder.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SamuraiGameBuilder.java:45:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:45:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:51:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:51:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:52:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:52:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SamuraiGameBuilder.java:91:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SamuraiGameBuilder.java:91:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SamuraiGameBuilder.java:91:	NPathComplexity:	NPathComplexity: The method 'drawColors()' has an NPath complexity of 1034, current threshold is 200
src/main/java/application/SamuraiGameBuilder.java:91:	NPathComplexity:	NPathComplexity: The method 'drawColors()' has an NPath complexity of 1034, current threshold is 200
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:94:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:95:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:105:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:105:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:105:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:105:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:106:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:109:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:109:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:109:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/SamuraiGameBuilder.java:109:	UselessParentheses:	UselessParentheses: Useless parentheses.
src/main/java/application/Storage.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/Storage.java:28:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/application/Storage.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/Storage.java:28:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/Storage.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:37:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:37:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:41:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:41:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:44:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:44:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contextMenu field if you want a default access modifier
src/main/java/application/Storage.java:44:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the contextMenu field if you want a default access modifier
src/main/java/application/Storage.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:44:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:44:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:44:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:45:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteMenuItem field if you want a default access modifier
src/main/java/application/Storage.java:45:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the deleteMenuItem field if you want a default access modifier
src/main/java/application/Storage.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:45:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:45:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:45:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:46:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loadMenuItem field if you want a default access modifier
src/main/java/application/Storage.java:46:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the loadMenuItem field if you want a default access modifier
src/main/java/application/Storage.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:46:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:46:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:46:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:50:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:50:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:54:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:54:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:55:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:55:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:56:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:56:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:57:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:57:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:58:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:58:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:58:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:58:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:59:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:59:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:59:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:59:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:60:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:60:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:60:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:61:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:61:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:65:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/Storage.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fontAwesome field if you want a default access modifier
src/main/java/application/Storage.java:65:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the fontAwesome field if you want a default access modifier
src/main/java/application/Storage.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:65:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:65:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:65:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the folderGraphic field if you want a default access modifier
src/main/java/application/Storage.java:66:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the folderGraphic field if you want a default access modifier
src/main/java/application/Storage.java:66:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:66:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/Storage.java:66:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:66:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/Storage.java:86:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/Storage.java:86:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/Storage.java:198:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/Storage.java:198:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/Storage.java:230:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/Storage.java:230:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:8:	UnusedImports:	UnusedImports: Unused import 'javafx.event.EventHandler'
src/main/java/application/SudokuField.java:8:	UnusedImports:	UnusedImports: Unused import 'javafx.event.EventHandler'
src/main/java/application/SudokuField.java:12:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCodeCombination'
src/main/java/application/SudokuField.java:12:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyCodeCombination'
src/main/java/application/SudokuField.java:14:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyEvent'
src/main/java/application/SudokuField.java:14:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.input.KeyEvent'
src/main/java/application/SudokuField.java:15:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.paint.Color'
src/main/java/application/SudokuField.java:15:	UnusedImports:	UnusedImports: Unused import 'javafx.scene.paint.Color'
src/main/java/application/SudokuField.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/SudokuField.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/application/SudokuField.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:20:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/SudokuField.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/SudokuField.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/SudokuField.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/application/SudokuField.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the freeFormColorListener field if you want a default access modifier
src/main/java/application/SudokuField.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the freeFormColorListener field if you want a default access modifier
src/main/java/application/SudokuField.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/application/SudokuField.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/SudokuField.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/application/SudokuField.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:27:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:30:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'onlyOneNumber' called during object construction
src/main/java/application/SudokuField.java:30:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'onlyOneNumber' called during object construction
src/main/java/application/SudokuField.java:31:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'enterPressed' called during object construction
src/main/java/application/SudokuField.java:31:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'enterPressed' called during object construction
src/main/java/application/SudokuField.java:32:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'updateColor' called during object construction
src/main/java/application/SudokuField.java:32:	ConstructorCallsOverridableMethod:	ConstructorCallsOverridableMethod: Overridable method 'updateColor' called during object construction
src/main/java/application/SudokuField.java:45:	PositionLiteralsFirstInComparisons:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/application/SudokuField.java:45:	PositionLiteralsFirstInComparisons:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/application/SudokuField.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:56:	AvoidLiteralsInIfCondition:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/main/java/application/SudokuField.java:56:	AvoidLiteralsInIfCondition:	AvoidLiteralsInIfCondition: Avoid using Literals in Conditional Statements
src/main/java/application/SudokuField.java:57:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/application/SudokuField.java:57:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/application/SudokuField.java:61:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:61:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:64:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:68:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:68:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:115:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:115:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:118:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:118:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuField.java:139:	BooleanGetMethodName:	BooleanGetMethodName: A getX() method which returns a boolean should be named isX()
src/main/java/application/SudokuField.java:139:	BooleanGetMethodName:	BooleanGetMethodName: A getX() method which returns a boolean should be named isX()
src/main/java/application/SudokuGameBuilder.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuGameBuilder.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/application/SudokuGameBuilder.java:45:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/application/SudokuGameBuilder.java:45:	AvoidInstantiatingObjectsInLoops:	AvoidInstantiatingObjectsInLoops: Avoid instantiating new objects inside loops
src/main/java/controller/GameController.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/controller/GameController.java:21:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/controller/GameController.java:21:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The class 'GameController' has a Modified Cyclomatic Complexity of 5 (Highest = 13).
src/main/java/controller/GameController.java:21:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The class 'GameController' has a Modified Cyclomatic Complexity of 5 (Highest = 13).
src/main/java/controller/GameController.java:21:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/controller/GameController.java:21:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/main/java/controller/GameController.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:23:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the scene field if you want a default access modifier
src/main/java/controller/GameController.java:23:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the scene field if you want a default access modifier
src/main/java/controller/GameController.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:23:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:23:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:24:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/main/java/controller/GameController.java:24:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/main/java/controller/GameController.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:24:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:24:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:24:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:25:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/controller/GameController.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the sudokuField field if you want a default access modifier
src/main/java/controller/GameController.java:25:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the sudokuField field if you want a default access modifier
src/main/java/controller/GameController.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:25:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:25:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:25:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the numberCounter field if you want a default access modifier
src/main/java/controller/GameController.java:26:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the numberCounter field if you want a default access modifier
src/main/java/controller/GameController.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:26:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/controller/GameController.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:26:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/controller/GameController.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:65:	PositionLiteralsFirstInComparisons:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/controller/GameController.java:65:	PositionLiteralsFirstInComparisons:	PositionLiteralsFirstInComparisons: Position literals first in String comparisons
src/main/java/controller/GameController.java:81:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/GameController.java:81:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/GameController.java:122:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:122:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:135:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:135:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:135:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:135:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:139:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:139:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:144:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:144:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:168:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:168:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:174:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:174:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:229:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:229:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:244:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/controller/GameController.java:244:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/controller/GameController.java:295:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:295:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:334:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:334:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:339:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/GameController.java:339:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/GameController.java:346:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:346:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:347:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:347:	SystemPrintln:	SystemPrintln: System.out.println is used
src/main/java/controller/GameController.java:373:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:373:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:376:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/controller/GameController.java:376:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/controller/GameController.java:386:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:386:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:386:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The method 'hintHandeler' has a Modified Cyclomatic Complexity of 12.
src/main/java/controller/GameController.java:386:	ModifiedCyclomaticComplexity:	ModifiedCyclomaticComplexity: The method 'hintHandeler' has a Modified Cyclomatic Complexity of 12.
src/main/java/controller/GameController.java:386:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:386:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:425:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:425:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:425:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:425:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:427:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:427:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:429:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:429:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:434:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:434:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:434:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:434:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:441:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:441:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/controller/GameController.java:510:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:510:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:510:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:510:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:523:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:523:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:523:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:523:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/GameController.java:535:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:535:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/GameController.java:536:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/GameController.java:536:	ForLoopCanBeForeach:	ForLoopCanBeForeach: This for loop can be replaced by a foreach loop
src/main/java/controller/PopOverController.java:3:	UnusedImports:	UnusedImports: Unused import 'application.BasicGameBuilder'
src/main/java/controller/PopOverController.java:3:	UnusedImports:	UnusedImports: Unused import 'application.BasicGameBuilder'
src/main/java/controller/PopOverController.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/controller/PopOverController.java:14:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/controller/PopOverController.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:16:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:23:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:23:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:32:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:32:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:41:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:41:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:49:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:49:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:49:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:49:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:56:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:56:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:56:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:56:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:63:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:63:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:70:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:70:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:70:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:70:	ShortVariable:	ShortVariable: Avoid variables with short names like e
src/main/java/controller/PopOverController.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/controller/PopOverController.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/Gamestate.java:3:	CommentRequired:	CommentRequired: Enum comments are required
src/main/java/logic/Gamestate.java:3:	CommentRequired:	CommentRequired: Enum comments are required
src/main/java/logic/SaveModel.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SaveModel.java:3:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SaveModel.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SaveModel.java:3:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SaveModel.java:3:	DataClass:	DataClass: The class 'SaveModel' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=20, WMC=20)
src/main/java/logic/SaveModel.java:3:	DataClass:	DataClass: The class 'SaveModel' is suspected to be a Data Class (WOC=0.000%, NOPA=0, NOAM=20, WMC=20)
src/main/java/logic/SaveModel.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:8:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:8:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'savedGameType'.
src/main/java/logic/SaveModel.java:8:	UnusedPrivateField:	UnusedPrivateField: Avoid unused private fields such as 'savedGameType'.
src/main/java/logic/SaveModel.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:10:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:12:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:13:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:14:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SaveModel.java:22:	MethodReturnsInternalArray:	MethodReturnsInternalArray: Returning 'gameArray' may expose an internal array.
src/main/java/logic/SaveModel.java:22:	MethodReturnsInternalArray:	MethodReturnsInternalArray: Returning 'gameArray' may expose an internal array.
src/main/java/logic/SaveModel.java:25:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/logic/SaveModel.java:25:	UseVarargs:	UseVarargs: Consider using varargs for methods or constructors which take an array the last parameter.
src/main/java/logic/SharedStoragePreferences.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SharedStoragePreferences.java:5:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SharedStoragePreferences.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SharedStoragePreferences.java:5:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SharedStoragePreferences.java:7:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the sudokuSaveCounter field if you want a default access modifier
src/main/java/logic/SharedStoragePreferences.java:7:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the sudokuSaveCounter field if you want a default access modifier
src/main/java/logic/SharedStoragePreferences.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:7:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:7:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/logic/SharedStoragePreferences.java:7:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/logic/SharedStoragePreferences.java:7:	RedundantFieldInitializer:	RedundantFieldInitializer: Avoid using redundant field initializer for 'sudokuSaveCounter'
src/main/java/logic/SharedStoragePreferences.java:7:	RedundantFieldInitializer:	RedundantFieldInitializer: Avoid using redundant field initializer for 'sudokuSaveCounter'
src/main/java/logic/SharedStoragePreferences.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:9:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SharedStoragePreferences.java:11:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SharedStoragePreferences.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the prefs field if you want a default access modifier
src/main/java/logic/SharedStoragePreferences.java:11:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the prefs field if you want a default access modifier
src/main/java/logic/SharedStoragePreferences.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:11:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SharedStoragePreferences.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/logic/SharedStoragePreferences.java:11:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/main/java/logic/SharedStoragePreferences.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SharedStoragePreferences.java:13:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SharedStoragePreferences.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SharedStoragePreferences.java:14:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SudokuStorageModel.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SudokuStorageModel.java:27:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/main/java/logic/SudokuStorageModel.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SudokuStorageModel.java:27:	CommentRequired:	CommentRequired: Class comments are required
src/main/java/logic/SudokuStorageModel.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:29:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:29:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:31:	AvoidFieldNameMatchingMethodName:	AvoidFieldNameMatchingMethodName: Field fileExists has the same name as a method
src/main/java/logic/SudokuStorageModel.java:31:	AvoidFieldNameMatchingMethodName:	AvoidFieldNameMatchingMethodName: Field fileExists has the same name as a method
src/main/java/logic/SudokuStorageModel.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:31:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:31:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:33:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/main/java/logic/SudokuStorageModel.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:33:	CommentRequired:	CommentRequired: Field comments are required
src/main/java/logic/SudokuStorageModel.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SudokuStorageModel.java:41:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SudokuStorageModel.java:76:	CloseResource:	CloseResource: Ensure that resources like this FileWriter object are closed after use
src/main/java/logic/SudokuStorageModel.java:76:	CloseResource:	CloseResource: Ensure that resources like this FileWriter object are closed after use
src/main/java/logic/SudokuStorageModel.java:76:	ShortVariable:	ShortVariable: Avoid variables with short names like fw
src/main/java/logic/SudokuStorageModel.java:76:	ShortVariable:	ShortVariable: Avoid variables with short names like fw
src/main/java/logic/SudokuStorageModel.java:84:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/logic/SudokuStorageModel.java:84:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/logic/SudokuStorageModel.java:102:	CloseResource:	CloseResource: Ensure that resources like this JsonWriter object are closed after use
src/main/java/logic/SudokuStorageModel.java:102:	CloseResource:	CloseResource: Ensure that resources like this JsonWriter object are closed after use
src/main/java/logic/SudokuStorageModel.java:110:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/logic/SudokuStorageModel.java:110:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/logic/SudokuStorageModel.java:115:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SudokuStorageModel.java:115:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/main/java/logic/SudokuStorageModel.java:122:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/logic/SudokuStorageModel.java:122:	ConfusingTernary:	ConfusingTernary: Avoid if (x != y) ..; else ..;
src/main/java/logic/SudokuStorageModel.java:132:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'model'
src/main/java/logic/SudokuStorageModel.java:132:	AvoidReassigningParameters:	AvoidReassigningParameters: Avoid reassigning parameters such as 'model'
src/main/java/logic/SudokuStorageModel.java:132:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:132:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:135:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:135:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:138:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:138:	ControlStatementBraces:	ControlStatementBraces: This statement should have braces
src/main/java/logic/SudokuStorageModel.java:155:	CloseResource:	CloseResource: Ensure that resources like this FileReader object are closed after use
src/main/java/logic/SudokuStorageModel.java:155:	CloseResource:	CloseResource: Ensure that resources like this FileReader object are closed after use
src/main/java/logic/SudokuStorageModel.java:155:	ShortVariable:	ShortVariable: Avoid variables with short names like br
src/main/java/logic/SudokuStorageModel.java:155:	ShortVariable:	ShortVariable: Avoid variables with short names like br
src/main/java/logic/SudokuStorageModel.java:159:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/main/java/logic/SudokuStorageModel.java:159:	AvoidPrintStackTrace:	AvoidPrintStackTrace: Avoid printStackTrace(); use a logger call instead.
src/test/java/test/BasicGameLogicTest.java:1:	TooManyStaticImports:	TooManyStaticImports: Too many static imports may lead to messy code
src/test/java/test/BasicGameLogicTest.java:1:	TooManyStaticImports:	TooManyStaticImports: Too many static imports may lead to messy code
src/test/java/test/BasicGameLogicTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/BasicGameLogicTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/BasicGameLogicTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/BasicGameLogicTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/BasicGameLogicTest.java:7:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/BasicGameLogicTest.java:7:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/BasicGameLogicTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/BasicGameLogicTest.java:17:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/BasicGameLogicTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/BasicGameLogicTest.java:17:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/BasicGameLogicTest.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/BasicGameLogicTest.java:17:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/BasicGameLogicTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/BasicGameLogicTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/BasicGameLogicTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/BasicGameLogicTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/BasicGameLogicTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/BasicGameLogicTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/BasicGameLogicTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/BasicGameLogicTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/BasicGameLogicTest.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:34:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:40:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/test/java/test/BasicGameLogicTest.java:40:	ShortVariable:	ShortVariable: Avoid variables with short names like a
src/test/java/test/BasicGameLogicTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:41:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:46:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:48:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:52:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:54:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:81:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:81:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:83:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:86:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:86:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:88:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:88:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:92:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:92:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:97:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:97:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:99:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:99:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:103:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:103:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:104:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:104:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:107:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:107:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:114:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:114:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:120:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:120:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:123:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:123:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:126:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:126:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:129:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:129:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:132:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:132:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:135:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:135:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:139:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:139:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:141:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:141:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:144:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:144:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:146:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:146:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:152:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:152:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:154:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:154:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:157:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:157:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:159:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:159:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:163:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:163:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:163:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/BasicGameLogicTest.java:163:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/BasicGameLogicTest.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:167:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:169:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:169:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:171:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:171:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:179:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:179:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:181:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:181:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:184:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:184:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:185:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:185:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/BasicGameLogicTest.java:189:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:189:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/BasicGameLogicTest.java:189:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/BasicGameLogicTest.java:189:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/CellTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/CellTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/CellTest.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/CellTest.java:13:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/CellTest.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/CellTest.java:13:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/CellTest.java:13:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/CellTest.java:13:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/CellTest.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/CellTest.java:15:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/CellTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the cell field if you want a default access modifier
src/test/java/test/CellTest.java:15:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the cell field if you want a default access modifier
src/test/java/test/CellTest.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/CellTest.java:15:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/CellTest.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/CellTest.java:15:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/CellTest.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:18:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:25:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:29:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:30:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:34:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:35:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:39:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:45:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:51:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:51:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:53:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:57:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:59:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:59:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:63:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:65:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:65:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:71:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:71:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:75:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:75:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:77:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:77:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:81:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:81:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/CellTest.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/CellTest.java:84:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:12:	UnusedImports:	UnusedImports: Unused import 'logic.Cell'
src/test/java/test/SamuraiLogicTest.java:12:	UnusedImports:	UnusedImports: Unused import 'logic.Cell'
src/test/java/test/SamuraiLogicTest.java:15:	UnusedImports:	UnusedImports: Unused import 'logic.SudokuLogic'
src/test/java/test/SamuraiLogicTest.java:15:	UnusedImports:	UnusedImports: Unused import 'logic.SudokuLogic'
src/test/java/test/SamuraiLogicTest.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SamuraiLogicTest.java:18:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SamuraiLogicTest.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SamuraiLogicTest.java:18:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SamuraiLogicTest.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/SamuraiLogicTest.java:18:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/SamuraiLogicTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SamuraiLogicTest.java:21:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SamuraiLogicTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SamuraiLogicTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SamuraiLogicTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SamuraiLogicTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SamuraiLogicTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:40:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:45:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:50:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:50:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:55:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:55:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:55:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:55:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:58:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:58:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:67:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:67:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:67:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:67:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:69:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:69:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:70:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:74:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:74:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:74:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:74:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:76:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:76:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:77:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:77:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:78:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:78:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:79:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:79:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:83:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:83:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:83:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:83:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:85:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:85:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:90:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:90:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowTopOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:90:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:90:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:92:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:94:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:95:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:99:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:99:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:99:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:101:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:102:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:106:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:106:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:108:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:108:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:109:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:110:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:110:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:111:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:115:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:115:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:115:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:117:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:118:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:118:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:122:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowBottomOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:122:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:122:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:124:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:125:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:125:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:126:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:127:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:127:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:131:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:131:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestRowCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:131:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:131:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:133:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:133:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:134:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:134:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:143:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:143:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:143:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:143:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:145:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:145:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:146:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:146:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:150:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:150:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:150:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:150:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:152:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:152:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:153:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:153:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:154:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:154:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:155:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:155:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:159:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:159:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:159:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:159:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:161:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:161:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:162:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:162:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:166:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:166:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColTopOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:166:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:166:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:168:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:168:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:169:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:169:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:170:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:170:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:171:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:171:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:175:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:175:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:175:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:175:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:177:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:177:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:178:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:178:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:182:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:182:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomOverlappingLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:182:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:182:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:184:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:184:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:185:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:185:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:186:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:186:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:187:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:187:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:191:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:191:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:191:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:191:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:193:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:193:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:194:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:194:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:198:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:198:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColBottomOverlappingRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:198:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:198:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:200:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:200:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:201:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:201:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:202:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:202:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:203:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:203:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:207:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:207:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestColCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:207:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:207:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:209:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:209:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:210:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:210:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:217:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxTopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:217:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxTopLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:217:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:217:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:219:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:219:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:220:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:220:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:224:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:224:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxTopRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:224:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:224:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:226:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:226:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:227:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:227:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:231:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:231:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxBottomLeft method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:231:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:231:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:233:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:233:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:234:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:234:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:238:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:238:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxBottomRight method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:238:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:238:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:240:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:240:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:241:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:241:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:245:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:245:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the TestBoxCenter method if you want a default access modifier
src/test/java/test/SamuraiLogicTest.java:245:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:245:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:247:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:247:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:248:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:248:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:258:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:258:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:258:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:258:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SamuraiLogicTest.java:259:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:259:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:262:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:262:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:263:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:263:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:264:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:264:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:268:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:268:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:279:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:279:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:283:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:283:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:294:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:294:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:298:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:298:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:309:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:309:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:313:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:313:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:324:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:324:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:328:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:328:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:339:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:339:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:343:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:343:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:344:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:344:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:349:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:349:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:361:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:361:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:367:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:367:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:379:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:379:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:383:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:383:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:395:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:395:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:399:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:399:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:403:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:403:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:407:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:407:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:407:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/SamuraiLogicTest.java:407:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/SamuraiLogicTest.java:412:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:412:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:414:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:414:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:418:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:418:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:421:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:421:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:426:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:426:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:431:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:431:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:435:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:435:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:439:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:439:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SamuraiLogicTest.java:444:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:444:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SamuraiLogicTest.java:445:	UseShortArrayInitializer:	UseShortArrayInitializer: Array initialization can be written shorter
src/test/java/test/SamuraiLogicTest.java:445:	UseShortArrayInitializer:	UseShortArrayInitializer: Array initialization can be written shorter
src/test/java/test/SamuraiLogicTest.java:452:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SamuraiLogicTest.java:452:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SharedStoragePreferencesTest.java:4:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/SharedStoragePreferencesTest.java:4:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/SharedStoragePreferencesTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/SharedStoragePreferencesTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/SharedStoragePreferencesTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/SharedStoragePreferencesTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/SharedStoragePreferencesTest.java:8:	UnusedImports:	UnusedImports: Unused import 'java.util.prefs.Preferences'
src/test/java/test/SharedStoragePreferencesTest.java:8:	UnusedImports:	UnusedImports: Unused import 'java.util.prefs.Preferences'
src/test/java/test/SharedStoragePreferencesTest.java:15:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SharedStoragePreferencesTest.java:15:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SharedStoragePreferencesTest.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SharedStoragePreferencesTest.java:15:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SharedStoragePreferencesTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SharedStoragePreferencesTest.java:17:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SharedStoragePreferencesTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ssp field if you want a default access modifier
src/test/java/test/SharedStoragePreferencesTest.java:17:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ssp field if you want a default access modifier
src/test/java/test/SharedStoragePreferencesTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SharedStoragePreferencesTest.java:17:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SharedStoragePreferencesTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SharedStoragePreferencesTest.java:17:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SharedStoragePreferencesTest.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:19:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:24:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SharedStoragePreferencesTest.java:26:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SharedStoragePreferencesTest.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:30:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SharedStoragePreferencesTest.java:32:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SharedStoragePreferencesTest.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:36:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SharedStoragePreferencesTest.java:38:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SharedStoragePreferencesTest.java:38:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SharedStoragePreferencesTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SharedStoragePreferencesTest.java:39:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:11:	UnusedImports:	UnusedImports: Unused import 'logic.Cell'
src/test/java/test/SudokuLogicTest.java:11:	UnusedImports:	UnusedImports: Unused import 'logic.Cell'
src/test/java/test/SudokuLogicTest.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SudokuLogicTest.java:16:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SudokuLogicTest.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SudokuLogicTest.java:16:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SudokuLogicTest.java:16:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/SudokuLogicTest.java:16:	TooManyMethods:	TooManyMethods: This class has too many methods, consider refactoring it.
src/test/java/test/SudokuLogicTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SudokuLogicTest.java:19:	BeanMembersShouldSerialize:	BeanMembersShouldSerialize: Found non-transient, non-static member. Please mark as transient or provide accessors.
src/test/java/test/SudokuLogicTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SudokuLogicTest.java:19:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SudokuLogicTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuLogicTest.java:19:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuLogicTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuLogicTest.java:19:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuLogicTest.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:22:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:28:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:38:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:44:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:49:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:49:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:54:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:54:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SudokuLogicTest.java:54:	JUnitTestContainsTooManyAsserts:	JUnitTestContainsTooManyAsserts: Unit tests should not contain more than 1 assert(s).
src/test/java/test/SudokuLogicTest.java:56:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:56:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:57:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:62:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:65:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:65:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:69:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:72:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:76:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:79:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:79:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:83:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:83:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:86:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:90:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:90:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:93:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:97:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:97:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:100:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:100:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:104:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:104:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:115:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:115:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:119:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:119:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:130:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:130:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:134:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:134:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:145:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:145:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:149:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:149:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:160:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:160:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:164:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:164:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:175:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:175:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:179:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:179:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:180:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:180:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:184:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:184:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:196:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:196:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:200:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:200:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:212:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:212:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:216:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:216:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:228:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:228:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:232:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:232:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:236:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:236:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:240:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:240:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:240:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/SudokuLogicTest.java:240:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/SudokuLogicTest.java:245:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:245:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:247:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:247:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:252:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:252:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:255:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:255:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:260:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:260:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:265:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:265:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:269:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:269:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:273:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:273:	JUnitAssertionsShouldIncludeMessage:	JUnitAssertionsShouldIncludeMessage: JUnit assertions should include a message
src/test/java/test/SudokuLogicTest.java:278:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:278:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuLogicTest.java:279:	UseShortArrayInitializer:	UseShortArrayInitializer: Array initialization can be written shorter
src/test/java/test/SudokuLogicTest.java:279:	UseShortArrayInitializer:	UseShortArrayInitializer: Array initialization can be written shorter
src/test/java/test/SudokuLogicTest.java:286:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SudokuLogicTest.java:286:	SystemPrintln:	SystemPrintln: System.out.println is used
src/test/java/test/SudokuStorageModelTest.java:3:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertEquals'
src/test/java/test/SudokuStorageModelTest.java:3:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertEquals'
src/test/java/test/SudokuStorageModelTest.java:4:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/SudokuStorageModelTest.java:4:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertFalse'
src/test/java/test/SudokuStorageModelTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/SudokuStorageModelTest.java:5:	UnusedImports:	UnusedImports: Unused import 'org.junit.Assert.assertTrue'
src/test/java/test/SudokuStorageModelTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/SudokuStorageModelTest.java:6:	UnusedImports:	UnusedImports: Unused import 'org.junit.jupiter.api.Assertions.assertNotEquals'
src/test/java/test/SudokuStorageModelTest.java:8:	UnusedImports:	UnusedImports: Unused import 'java.util.prefs.Preferences'
src/test/java/test/SudokuStorageModelTest.java:8:	UnusedImports:	UnusedImports: Unused import 'java.util.prefs.Preferences'
src/test/java/test/SudokuStorageModelTest.java:15:	UnusedImports:	UnusedImports: Unused import 'logic.SamuraiLogic'
src/test/java/test/SudokuStorageModelTest.java:15:	UnusedImports:	UnusedImports: Unused import 'logic.SamuraiLogic'
src/test/java/test/SudokuStorageModelTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SudokuStorageModelTest.java:19:	AtLeastOneConstructor:	AtLeastOneConstructor: Each class should declare at least one constructor
src/test/java/test/SudokuStorageModelTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SudokuStorageModelTest.java:19:	CommentRequired:	CommentRequired: Class comments are required
src/test/java/test/SudokuStorageModelTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ssmt field if you want a default access modifier
src/test/java/test/SudokuStorageModelTest.java:21:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the ssmt field if you want a default access modifier
src/test/java/test/SudokuStorageModelTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuStorageModelTest.java:21:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuStorageModelTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuStorageModelTest.java:21:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuStorageModelTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SudokuStorageModelTest.java:22:	CommentDefaultAccessModifier:	CommentDefaultAccessModifier: To avoid mistakes add a comment at the beginning of the model field if you want a default access modifier
src/test/java/test/SudokuStorageModelTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuStorageModelTest.java:22:	CommentRequired:	CommentRequired: Field comments are required
src/test/java/test/SudokuStorageModelTest.java:22:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuStorageModelTest.java:22:	DefaultPackage:	DefaultPackage: Use explicit scoping instead of the default package private level
src/test/java/test/SudokuStorageModelTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuStorageModelTest.java:25:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuStorageModelTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuStorageModelTest.java:31:	CommentRequired:	CommentRequired: Public method and constructor comments are required
src/test/java/test/SudokuStorageModelTest.java:31:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
src/test/java/test/SudokuStorageModelTest.java:31:	JUnitTestsShouldIncludeAssert:	JUnitTestsShouldIncludeAssert: JUnit tests should include assert() or fail()
